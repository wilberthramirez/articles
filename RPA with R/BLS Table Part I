# Getting tables from BLS

#LIBRARIES ----
library(tidyverse)
library(rvest)
library(janitor)
library(stringr.plus)
library(gt)
library(kableExtra)


#*THEMES* ----
#Colors ----
bls_dark_blue <- "#182c54"
bls_light_blue <- "#0059a0"

# Tables ----

gt_theme <- function(data) {
    
    tab_options(
        data = data,
        heading.align = "left",
        column_labels.font.weight = "bold",
        column_labels.border.top.color = "transparent",
        column_labels.border.bottom.width = px(3),
        column_labels.border.bottom.color = "black",
        table_body.hlines.color = "lightgray", # column horizontal lines
        table.border.top.color = "black",
        table.border.bottom.color = "white", # last horizontal line before notes
        table.border.bottom.width = px(3),
        data_row.padding = px(10))
}


    
# *SCRAPPING* ----
url <- "https://www.bls.gov/regions/west/california.htm#eag"

raw_table <- url %>% 
    read_html() %>% 
    html_nodes("table") %>% 
    .[[1]] %>% 
    html_table(fill = TRUE) %>% 
    clean_names() %>% 
    select(-back_data)

#This will created the Year table spanners for any year
spanners <- raw_table %>% 
            select(matches("\\d+")) %>%
            names() %>% 
            parse_number()

#*DATA* ----

#Index ----

index_table <- raw_table %>% 
    #Cleaning
    mutate_at(vars(2:last_col()), ~ str_remove_all(., "[A-Za-z,()_]")) %>% 
    #Transformations
    rename_at(vars(2:last_col()), ~ paste0(spanners,"_",.)) %>% 
    rename_at(vars(2:last_col()), ~ str_extract_before(., "_2")) %>% 
    rename_at(vars(2:last_col()), ~ str_remove(., "_$"))  %>%
    #This creates the label for the grouping when applying it to gt package
    mutate(econ_index = case_when(str_starts(data_series,"Labor Force") ~  "Labor Force Data",
                                  str_starts(data_series,"Nonfarm Wage") ~ "Nonfarm Wage and Salary Employment",
                                  TRUE ~ NA_character_),.before = 1) %>% 
    fill(econ_index, .direction = "down") %>%
    slice(-nrow(.)) %>% # removes the footnote
    # removes the rows that are equal to the grouping column
    filter(econ_index != data_series,
           !str_starts(data_series,"12-month")) %>% 
    # conversion to numeric for analysis/transformations
    rename(Indicator = data_series) %>%
    mutate_at(vars(3:last_col()), ~ as.numeric(.)) %>%
    mutate(
        # plot_image = NA,.after = "Indicator",
        Average = rowMeans(.[3:ncol(.)], na.rm = T)
           ) %>% 
    mutate_if(is.numeric, ~ round(., 1)) %>% 
    rowwise() %>% 
    mutate(sorting_index = max(c_across(3:8))) %>% 
    group_by(econ_index) %>% 
    arrange(-sorting_index, .by_group = TRUE) %>% 
    ungroup() %>% 
    select(-sorting_index) %>% 
    mutate_at(vars(Indicator), ~ str_remove_all(., "[0-9][()]")) %>% 
    mutate_at(vars(Indicator), ~ str_remove(., "\\($"))


#Plot Dataset ----
    
plot_dataset <- index_table %>%
                pivot_longer(-c(econ_index, Indicator, Average), 
                             names_to = "period", values_to = "values") %>%
    select(Indicator, values) %>% 
    group_by(Indicator) %>% 
    summarize(data = list(values), .groups = "drop") %>%
    # This code created the sparkline via KableExtra
    mutate(
        Trend = map(data, ~spec_plot(.x, same_lim = TRUE, width = 300, 
                                    height = 70, col = "black", cex = 3, lwd = 0.7)),
        Trend = map(Trend, "svg_text"),
        Trend = map(Trend, gt::html)
    ) %>% select(-data) 


    
#Percent Data----

pct_table <- raw_table %>%
    slice(-nrow(.)) %>%
    slice(-c(1:6)) %>% 
    filter(!str_detect(data_series,"12-mo")) %>% 
    select(Indicator = data_series) %>%
    mutate_at(vars(Indicator), ~ str_remove_all(., "[0-9][()]")) %>% 
    mutate_at(vars(Indicator), ~ str_remove(., "\\($")) %>% 
    bind_cols(
        raw_table %>% 
        filter(str_detect(data_series, "12-mo")) %>%
        select(-data_series) %>% 
        mutate_all(~ str_remove_all(., "[A-Za-z,()_]")) %>% 
        set_names(., letters[1:ncol(.)])
    )  


# Full Table Set ----
full_tableset <- index_table %>% 
    left_join(plot_dataset) %>%
    left_join(pct_table) %>%
    mutate_at(vars(a:f), ~ as.numeric(.)) %>% 
    select(econ_index, Indicator, Trend, Average, everything())

# GT OUTPUT ----


# Required for column selection to avoid typing
# BLS reports 6 month always
month_1 <-  names(full_tableset)[5]
month_2 <-  names(full_tableset)[6]
month_3 <-  names(full_tableset)[7]
month_4 <-  names(full_tableset)[8]
month_5 <-  names(full_tableset)[9]
month_6 <-  names(full_tableset)[10]



bls_table <- full_tableset %>%
    gt(groupname_col = "econ_index") %>% 
    gt_theme() %>% 
    # Structural changes
    #Spanners
    tab_spanner_delim(delim = "_") %>%
    tab_spanner(label = md("Last 6 Months"), columns = 3:4) %>%
    #Titles
    tab_header(title = html(web_image("https://www.nass.org/sites/default/files/state-flags/MA.png",height = 100),"<br><strong style = 'padding-top: 20px;'>Massachusetts Economy at a Glance</strong>"),
               subtitle = html("<span style ='font-weight:bold;color:#8B008B'>No. of Persons</span> | <span style ='font-weight:bold;color:#0059a0'>No. of Jobs</span> | <span style = 'font-weight:bold;color:#4F4F4F'>12-mo % change</span><br><br>")) %>% 
    #Column Re-Labeling
    cols_label(Indicator = html("<small><font style='color: #8086A0;text-align:left;'> '000s, seasonally adjusted</font></small>")
                   ) %>% 
    # Cells Formatting
    fmt_number(columns = 4:10, rows = 1:3, sep_mark = ",", decimals = 1) %>% 
    fmt_number(columns = 4:10, rows = 5:10, sep_mark = ",", decimals = 1) %>% 
    fmt_percent(columns = 4:10, rows = 4, decimals = 1, scale_values = FALSE) %>%
    fmt_percent(columns = 11:last_col(), decimals = 1, scale_values = FALSE) %>%
    # Cell borders
    tab_style(style = cell_text(weight = "bold"),
              locations = cells_body(columns = vars(Average))) %>%         
    fmt_missing(columns = 11:last_col(), missing_text = "") %>% 
    # Conditional Coloring
    tab_style(style = cell_text(color = "red"),
              locations = list(cells_body(columns = 11,rows = `a` < 0))) %>% 
    cols_merge(columns =vars(month_1, "a")) %>%
    cols_merge(columns =vars(month_2, "b")) %>% 
    cols_merge(columns =vars(month_3, "c")) %>% 
    cols_merge(columns =vars(month_4, "d")) %>% 
    cols_merge(columns =vars(month_5, "e")) %>% 
    cols_merge(columns =vars(month_6, "f")) %>% 
    text_transform(
        locations = cells_body(columns = vars(month_1, month_2,month_3,
                                              month_4, month_5,month_6), rows = 5:16),
                   fn = function(x){
                       reporting_month <- word(x, 1)
                       change <- word(x, -1)
                       glue::glue(
                           "<div><span>{reporting_month}</div>
        <div><span style ='font-weight:bold;color:#4F4F4F;font-size:12px;text-align:center;'>{change}</span></div>"
                       )}) %>% 

    #Column Alignment
    cols_align(columns = 3:last_col(), align = "center") %>% 
    cols_align(columns = 2, align = "left") %>% 
    
    #Formatting
    opt_all_caps() %>% 
    opt_row_striping() %>% 
    #Footnotes & Source
    tab_source_note(html("<b>Data:</b> U.S Bureau of Labor Statistics | <b>Visuals:</b> Wilberth Ramirez")) %>%
    tab_footnote( 
        footnote = "Preliminary",
        locations = cells_column_labels(columns = last_col())) %>%
        # Grouped Rows coloring and footnotes
    tab_style(style = cell_text(color = "#8B008B"),
                  locations = cells_row_groups(groups = "Labor Force Data")) %>% 
    tab_style(style = cell_text(color = bls_light_blue),
              locations = cells_row_groups(groups = "Nonfarm Wage and Salary Employment"))
    

# Saving
gtsave(bls_table, "bls_table.png", expand = 20, zoom = 2)
